<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color=c_black;
r=0;
initialized = false;
length = 0;

drop_x[0] = 0;
drop_y[0] = 0;
drop_color[0] = 0;
drop_life[0] = 0;
drop_size[0] = 0;
drop_speed_x[0] = 0;
drop_speed_y[0] = 0;
drop_is_glitter[0] = 0;
drop_rand[0] = 0;
drop_radius[0] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!initialized){
    var max_angle = 2*pi*100;
    var val = colour_get_value(color);
    var hue = colour_get_hue(color);
    
    for(var i=length;i&gt;=0;i--){
        var rangle = random(max_angle)/100;
        var dx = x+random(r);
        var new_x = x + cos(rangle) * (dx - x);
        var new_y = y + sin(rangle) * (dx - x);
        drop_x[i] = new_x;
        drop_y[i] = new_y;
        drop_speed_x[i]=random(14)-7;
        drop_speed_y[i]=random(14)-7;
        drop_life[i]=random(8);
        drop_rand[i]=1;
        drop_r[i] = 1;
        drop_radius[i]= drop_r[i]*drop_life[i]*drop_rand[i];

        var sat = colour_get_saturation(color);
        
        sat -= random(sat);
        if(sat&lt;0) sat=0;
        drop_color[i] = make_colour_hsv(hue,sat,val);
        if(sat&lt;128){
            drop_is_glitter[i]=true;
        }else{
            drop_is_glitter[i]=false;
        }
    }
    initialized = true;
}else{
    var still_alive = false;
    for(var i=0; i&lt;length; i++){
        if(drop_life[i]&gt;0){
            still_alive=true;
            drop_y[i]+=drop_speed_y[i];
            drop_x[i]+=drop_speed_x[i];
            
            drop_speed_y[i]+=0.5;
            if(drop_speed_x[i]&lt;0.1)
                drop_speed_x[i] += 0.1; 
            if(drop_speed_x[i]&gt;0.1)
                drop_speed_x[i] -= 0.1;
                
            drop_life[i] -= 0.24;
            
            if(drop_is_glitter[i]){
                drop_rand[i] = random(0.3);
                if(drop_rand[i]&gt;0.15)drop_rand[i]+=0.7;
            }
            
            drop_radius[i] = drop_r[i]*drop_life[i]*drop_rand[i];
        }
    }
    if(!still_alive){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(initialized){
    for(var i = 0; i&lt;length; i++){
        if(drop_life[i]&gt;0){
            draw_set_color(drop_color[i]);
            draw_circle(drop_x[i], drop_y[i], drop_radius[i],false);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
